const e=new class{constructor(){this.eventObject={},this.callbackId=0}publish(e,...t){const s=this.eventObject[e];if(!s)return console.warn(`${e} not found`);for(let e in s)s[e](...t),"d"===e[0]&&delete s[e]}subscribe(e,t){this.eventObject[e]||(this.eventObject[e]={});const s=this.callbackId++;this.eventObject[e][s]=t;return{unSubscribe:()=>{delete this.eventObject[e][s],0===Object.keys(this.eventObject[e]).length&&delete this.eventObject[e]}}}subscribeOnce(e,t){this.eventObject[e]||(this.eventObject[e]={});const s="d"+this.callbackId++;this.eventObject[e][s]=t;return{unSubscribe:()=>{delete this.eventObject[e][s],0===Object.keys(this.eventObject[e]).length&&delete this.eventObject[e]}}}clear(e){e?delete this.eventObject[e]:this.eventObject={}}};e.subscribe("eventX",((e,t)=>{console.log("Module A",e,t)})),e.subscribe("eventX",((e,t)=>{console.log("Module B",e,t)})),e.subscribe("eventX",((e,t)=>{console.log("Module C",e,t)})),e.publish("eventX",{msg:"EventX published"},1),e.clear("eventX"),e.publish("eventX",{msg:"EventX published again"},2);
//# sourceMappingURL=index.22d90c8b.js.map
